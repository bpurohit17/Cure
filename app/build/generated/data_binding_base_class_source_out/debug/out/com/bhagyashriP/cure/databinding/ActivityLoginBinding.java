// Generated by view binder compiler. Do not edit!
package com.bhagyashriP.cure.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhagyashriP.cure.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final AutoCompleteTextView edtEmail;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final LinearLayout loginForm;

  @NonNull
  public final ProgressBar loginProgress;

  @NonNull
  public final TextView signupRedirectText;

  @NonNull
  public final TextView txtForgetPassword;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull Button btnLogin,
      @NonNull AutoCompleteTextView edtEmail, @NonNull EditText edtPassword,
      @NonNull LinearLayout loginForm, @NonNull ProgressBar loginProgress,
      @NonNull TextView signupRedirectText, @NonNull TextView txtForgetPassword) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.edtEmail = edtEmail;
    this.edtPassword = edtPassword;
    this.loginForm = loginForm;
    this.loginProgress = loginProgress;
    this.signupRedirectText = signupRedirectText;
    this.txtForgetPassword = txtForgetPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.edtEmail;
      AutoCompleteTextView edtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edtPassword;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.login_form;
      LinearLayout loginForm = ViewBindings.findChildViewById(rootView, id);
      if (loginForm == null) {
        break missingId;
      }

      id = R.id.login_progress;
      ProgressBar loginProgress = ViewBindings.findChildViewById(rootView, id);
      if (loginProgress == null) {
        break missingId;
      }

      id = R.id.signupRedirectText;
      TextView signupRedirectText = ViewBindings.findChildViewById(rootView, id);
      if (signupRedirectText == null) {
        break missingId;
      }

      id = R.id.txtForgetPassword;
      TextView txtForgetPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtForgetPassword == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, btnLogin, edtEmail, edtPassword,
          loginForm, loginProgress, signupRedirectText, txtForgetPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
